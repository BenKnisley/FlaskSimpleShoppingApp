TICKET: 11, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Build product template to display a product from the database
    - Make it take a product object.

TICKET: 8, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Add a dummy getProductByID(ID) that returns a single dummy object.

TICKET: 7, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Create a product class in its own file in the model folder.
  - Include everything you want to include in the database.

TICKET: 6, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Document all files better. Comment all the code, and write a header for each
    file.

TICKET: 10, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Remove /controller dir.

TICKET: 5, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Inside /view/__init__.py create a function display(file) that reads the
      contents of file, and hands it to the display template, and returns the
      results.

TICKET: 4, CREATED: Mar/26/2016, AUTHOR: Ben Knisley
  - Inside /view create /template directory.
  - Add TICKET 3 master template to /template dir.

TICKET: 3, COMPETED: Mar/26/2016, AUTHOR: Ben Knisley
  - Create a basic placeholder master template.

TICKET: 2, COMPLETED: Mar/26/2016, AUTHOR: Ben Knisley
  - Create a model, a view, and a controller directories; each with a __init__.py
    file to convert to to a model.

TICKET: 1, COMPLETED: Mar/26/2016, AUTHOR: Ben Knisley
    Setup Minimal Flask Application
      - Create a controller.py that runs a minimal Flask app.
